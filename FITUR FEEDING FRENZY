#include <iostream>
#include <fstream>
#include <windows.h>
#include <string>
#include <cmath>
#include <ncurses/ncurses.h>

using namespace std;

void delay(int milliseconds) {
    Sleep(milliseconds);
}

void gotoxy(int x, int y) {
    COORD coord;
    coord.X = x;
    coord.Y = y;
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
}

void loadingawal() {
    system("color 3F");
	initscr();
	
	curs_set(0);
	
	start_color();
	init_pair(1, COLOR_WHITE, COLOR_BLUE);
	init_pair(2, COLOR_WHITE, COLOR_CYAN);	
	
	bkgd(COLOR_PAIR(2));

	for (int f = 0; f < LINES; f++){	
	attron(COLOR_PAIR(2));
    mvprintw(22 - f, 21, " 00         00   0000000   000         00000      0000000    0000000000   0000000      ");
    mvprintw(23 - f, 21, " 00         00   00        000       00     00   00     00   0000000000   00           ");
    mvprintw(24 - f, 21, " 00   000   00   0000000   000       00          00     00   00  00  00   0000000      ");
    mvprintw(25 - f, 21, " 00   000   00   0000000   000       00          00     00   00  00  00   0000000      ");           
    mvprintw(26 - f, 21, " 00   000   00   00        0000000   00     00   00     00   00  00  00   00           ");
    mvprintw(27 - f, 21, "    000  000     0000000   0000000     00000      0000000    00  00  00   0000000      ");
    mvprintw(28 - f, 21, "                                                                                       ");
    refresh();
    Sleep(50);
}
    clear();
	bkgd(COLOR_PAIR(2));

	for (int i = 0; i <= COLS; i++){
	mvprintw(2, i, "o");
	mvprintw(LINES - 4, i, "o");
	mvprintw(10, i, "o");
	mvprintw(LINES - 12, i, "o");
	refresh();
	Sleep(20);
	}
	
	attron(COLOR_PAIR(2));
	mvprintw(12, 50, "     LOGGED IN      ");
	mvprintw(13, 50, " ------------------ ");
	mvprintw(14, 50, "|                  |");
	mvprintw(15, 50, " ------------------ ");
		
	int load = 1;
		
	for (int j = 1; j <= 100; j++){
	if (j % 6 == 0 ) load++;
	attron(COLOR_PAIR(1));
	mvprintw(14, 50 + load, " ");
	attron(COLOR_PAIR(2));
	mvprintw(16, 54, "Loading ");
	mvprintw(16, 63, "  %%", j);
	mvprintw(16, 62, "%d");
	refresh();
	Sleep(50);
	}
		
	endwin();
}

void SignUp() {
    ofstream myFile, accList;
    string username, password;

    system("cls");
    cout << "------------> SIGN UP <------------" << endl;
    cout << "Enter Username: ";
    cin >> username;

    cout << "Enter Password: ";
    cin >> password;
    cout << endl;

    myFile.open(username + ".txt");
    if (!myFile) {
        cout << "Error opening file for user data!" << endl;
        return;
    }
    myFile << password;
    myFile.close();

    accList.open("ListAccount.txt", ios::app);
    if (!accList) {
        cout << "Error opening account list!" << endl;
        return;
    }
    accList << username << endl;
    accList.close();

    cout << "Sign Up Successful!" << endl;
}

bool SignIn() {
    ifstream myFile;
    string username, password, fileUsername, filePassword;
    bool exist = false;

    system("cls");
    cout << "------------> LOGIN <------------" << endl;
    cout << "Enter Username: ";
    cin >> username;
    cout << "Enter Password: ";
    cin >> password;

    myFile.open(username + ".txt");
    if (!myFile) {
        cout << "Error opening user file!" << endl;
        return false;
    }

    getline(myFile, filePassword);
    if (filePassword == password) {
        exist = true;
    }
    myFile.close();

    if (exist) {
        cout << "\n Sign In Successful!" << endl;
        system("pause");
        return true;
    } else {
        cout << "\n Sign In Failed! Try Again." << endl;
        system("pause");
        return false;
    }
}

void loadingAnimation() {
    const int WIDTH = 112;
    const int HEIGHT = 25;
    double amplitude1 = 3;
    double amplitude2 = 2;
    double frequency = 3;

    for (int i = 0; i < WIDTH; i++) {
        int x = i % WIDTH;
        int y1 = (int)(amplitude1 * sin(frequency * i));
        int y2 = (int)(amplitude2 * sin(frequency * i + M_PI));
        int y3 = (int)(amplitude1 * sin(frequency * i + M_PI));
        int y4 = (int)(amplitude2 * sin(frequency * i));

        gotoxy(x, HEIGHT / 4 + y1);
        cout << "{==>>"; 
        gotoxy(x + 7, HEIGHT / 4 + y2);
        cout << "*";

        gotoxy(x, 3 * HEIGHT / 2.7 + y3);
        cout << "{==>>"; 
        gotoxy(x + 7, 3 * HEIGHT / 2.7 + y4);
        cout << "*"; 

        delay(50);
        gotoxy(50, 16);
        cout << "<<--FEEDING FRENZY-->>";
        delay(10);
    }
}

void startGame() {
    system("cls");
    cout << "\n \n \n \n \n \n 							Start The Game... \n";
    cout <<"							Selamat Bermain Feeding Frenzy! \n";
    getch();
    system("pause");
}
